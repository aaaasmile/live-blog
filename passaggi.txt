Le porte su invido.it occupate sono:
MySmileCv, rails e passenger. Non chiara la porta usata da passenger, credo 3000 o 3001.
IolVienna, service in go che usa la porta 5568

Per LiveBlog direi di usare la porta 5546

== Compilare per linux
Apri una nuova powershell e poi:
$env:GOOS = "linux"
go build -o live-blog.bin
Con WLC si pu√≤ controllare che il live-blog.bin funziona correttamente.

== Aggiornare il service
- Crea una nuova versione (cambio in idl.go)
- Crea il file live-blog.bin per linux 
- Usa .\deploy -target invido
- In WLC lancia ./copy_app_to_invido.sh
- Su invido: ./update-seervice.sh

== Deployment di live.invido.it
Per prima cosa aggiornare il DNS aggiungendo live.invido.it
Poi bisogna abilitare il reverse proxy con https su nginx. Parto dal file iolvienna:
/etc/nginx/sites-available$ sudo cp vienna.invido.it  live.invido.it
poi cambio i link http e il nome del server usando i dati del nuovo service live-blog
sudo nano live.invido.it
Bisogna abilitare il sito:
sudo ln -s /etc/nginx/sites-available/live.invido.it  /etc/nginx/sites-enabled/live.invido.it
Un test della configurazione di nginx:
sudo nginx -t
Ora un restart:
sudo systemctl restart nginx

Su invido.it poi si aggiorna il certificato (NOTA se questo step si fa prima di nginx enable e available, certbot va a modificare il file default e 
il sito live.invido.it non funziona. Errore "nginx: [warn] conflicting server name "live.invido.it" on [::]:443, ignored". 
Qui bisogna modificare il file default cancellando il redirect del sito live su invido.it):
sudo certbot --nginx -d <lista di tutti i domini> -d live.invido.it
Alla scelta scegliere [1], non modificare nginx (anche se come messo sopra, certbot va a cambiare il file di default)

Ora va installata la app. Uso la dir:
~/app/go$mkdir live-blog\zips
copio lo zip deployed locale in live-blog\zips con ./copy_app_to_invido.sh
copio ./update-service.sh in ~/app/go/live-blog e lo lancio per scompattare lo zip nella dir ./current
Poi si va ./current e si prova il service con: ./live-blog.bin

Poi si mette il programma live-blog.bin come service di sistema.
sudo nano /lib/systemd/system/live-blog.service
Si mette tutto il necessario che non sto qui a riportare (readme_hetzner)
Abilitare il service:
sudo systemctl enable live-blog.service
Ora si fa partire il service (resistente al reboot):
sudo systemctl start live-blog
Per vedere i logs si usa:
sudo journalctl -f -u live-blog


